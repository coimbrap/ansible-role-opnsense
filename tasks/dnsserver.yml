---
- name: Count dnsservers set
  delegate_to: localhost
  xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/system/dnsserver
    count: yes
  register: dnsservercount

- name: Get dnsservers set
  delegate_to: localhost
  xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/system/dnsserver
    content: text
  register: configured_dnsserver
  when: dnsservercount.count > 0

- set_fact:
    change_dns: True
  with_items: "{{ configured_dnsserver.matches }}"
  when: dnsservercount.count > 0 and ((item.dnsserver not in dnsserver) or (dnsserver|length) != (configured_dnsserver.matches|length))

- set_fact:
    change_dns: True
  when: dnsservercount.count == 0 and dnsserver|length > 0

- name: Reset dnsservers
  delegate_to: localhost
  xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/system/dnsserver
    state: absent
    pretty_print: yes
  when: change_dns | default(False)

- name: Dnsservers
  delegate_to: localhost
  xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/system
    add_children: 
      - dnsserver: "{{ item }}"
    pretty_print: yes
  when: change_dns | default(False)
  with_items: 
    "{{ dnsserver }}"

- set_fact:
    dnsallowoverride_state: "present"
  when: dnsallowoverride | default(True)
- set_fact:
    dnsallowoverride_state: "absent"
  when: not (dnsallowoverride | default(True))

- name: Set dnsallowoverride {{ dnsallowoverride_state }}
  delegate_to: localhost
  xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/system/dnsallowoverride
    state: "{{ dnsallowoverride_state }}"
    pretty_print: yes

- name: Use the local DNS service as a nameserver for this system
  delegate_to: localhost
  xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/system/dnslocalhost
    value: "1"
    pretty_print: yes
  when: dnslocalhost | default(False)

- name: Do not use the local DNS service as a nameserver for this system
  delegate_to: localhost
  xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/system/dnslocalhost
    state: absent
    pretty_print: yes
  when: not (dnslocalhost | default(False))
...
