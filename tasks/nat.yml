---
- name: nat - settings
  delegate_to: localhost
  xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/{{ item.key }}"
    value: "{{ item.value }}"
    pretty_print: yes
  with_dict: "{{ opn_nat_settings | default([]) }}"

- name: nat - rules
  delegate_to: localhost
  xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/nat/outbound/rule[descr/text()="{{ item.0.descr }}"]/{{ item.1.key }}
    value: "{{ item.1.value }}"
    pretty_print: yes
  with_subelements:
    - "{{ opn_nat | default([]) }}"
    - settings

# remove the default empty <rule/> node remains after configuring the first one

- name: nat - remove default empty node
  delegate_to: localhost
  xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/nat/outbound/rule[not(node())]
    state: absent
  when: opn_nat is defined

- name: nat - port forward
  delegate_to: localhost
  xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/nat/rule[descr/text()="{{ item.0.descr }}"]/{{ item.1.key }}
    value: "{{ item.1.value }}"
    pretty_print: yes
  with_subelements:
    - "{{ opn_nat_port_forward | default([]) }}"
    - settings


# remove the default empty <rule/> node remains after configuring the first one

- name: nat - remove default empty node
  delegate_to: localhost
  xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/nat/rule[not(node())]
    state: absent
  when: opn_nat_port_forward is defined

...
